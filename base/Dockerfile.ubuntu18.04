# ainblockchain/workspace:ubuntu18.04
FROM ubuntu:18.04

USER root

# Basic Env
ENV \
    SHELL="/bin/bash" \
    HOME="/root"  \
    WORKSPACE_HOME="/workspace" \
    USER_GID=0

WORKDIR $HOME

# Layer cleanup script
COPY clean-layer.sh  /usr/bin/clean-layer.sh
COPY fix-permissions.sh  /usr/bin/fix-permissions.sh
# Make clean-layer and fix-permissions executable
RUN \
  chmod a+rwx /usr/bin/clean-layer.sh && \
  chmod a+rwx /usr/bin/fix-permissions.sh

# Generate and Set locals
# https://stackoverflow.com/questions/28405902/how-to-set-the-locale-inside-a-debian-ubuntu-docker-container#38553499
RUN \
    apt update && \
    apt install -y locales && \
    # install locales-all?
    sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \
    locale-gen && \
    dpkg-reconfigure --frontend=noninteractive locales && \
    update-locale LANG=en_US.UTF-8 && \
    # Cleanup
    clean-layer.sh

ENV LC_ALL="en_US.UTF-8" \
    LANG="en_US.UTF-8" \
    LANGUAGE="en_US:en"

# Install basics
RUN \
    apt update --fix-missing && \
    apt install -y sudo apt-utils && \
    apt upgrade -y && \
    apt update && \
    apt install -y --no-install-recommends \
        # This is necessary for apt to access HTTPS sources:
        apt-transport-https \
        ca-certificates \
        curl \
        wget \
        cron \
        git \
        zip \
        gzip \
        unzip && \
    # Fix all execution permissions
    chmod -R a+rwx /usr/local/bin/ && \
    # Fix permissions
    fix-permissions.sh $HOME && \
    # Cleanup
    clean-layer.sh

# About Python
ENV \
    # TODO: CONDA_DIR is deprecated and should be removed in the future
    CONDA_DIR=/opt/conda \
    CONDA_ROOT=/opt/conda \
    PYTHON_VERSION="3.7.9" \
    CONDA_PYTHON_DIR=/opt/conda/lib/python3.7 \
    MINICONDA_VERSION=4.9.2 \
    MINICONDA_MD5=122c8c9beb51e124ab32a0fa6426c656 \
    CONDA_VERSION=4.9.2

RUN wget --no-verbose https://repo.anaconda.com/miniconda/Miniconda3-py38_${CONDA_VERSION}-Linux-x86_64.sh -O ~/miniconda.sh && \
    echo "${MINICONDA_MD5} *miniconda.sh" | md5sum -c - && \
    /bin/bash ~/miniconda.sh -b -p $CONDA_ROOT && \
    export PATH=$CONDA_ROOT/bin:$PATH && \
    rm ~/miniconda.sh && \
    # Configure conda
    # TODO: Add conde-forge as main channel -> remove if testted
    # TODO, use condarc file
    $CONDA_ROOT/bin/conda config --system --add channels conda-forge && \
    $CONDA_ROOT/bin/conda config --system --set auto_update_conda False && \
    $CONDA_ROOT/bin/conda config --system --set show_channel_urls True && \
    $CONDA_ROOT/bin/conda config --system --set channel_priority strict && \
    # Deactivate pip interoperability (currently default), otherwise conda tries to uninstall pip packages
    $CONDA_ROOT/bin/conda config --system --set pip_interop_enabled false && \
    # Update conda
    $CONDA_ROOT/bin/conda update -y -n base -c defaults conda && \
    $CONDA_ROOT/bin/conda update -y setuptools && \
    $CONDA_ROOT/bin/conda install -y conda-build && \
    # Update selected packages - install python 3.7.9
    $CONDA_ROOT/bin/conda install -y --update-all python=$PYTHON_VERSION && \
    # Link Conda
    ln -s $CONDA_ROOT/bin/python /usr/local/bin/python && \
    ln -s $CONDA_ROOT/bin/conda /usr/bin/conda && \
    # Update
    $CONDA_ROOT/bin/conda install -y pip && \
    $CONDA_ROOT/bin/pip install --upgrade pip && \
    chmod -R a+rwx /usr/local/bin/ && \
    # Cleanup - Remove all here since conda is not in path as of now
    # find /opt/conda/ -follow -type f -name '*.a' -delete && \
    # find /opt/conda/ -follow -type f -name '*.js.map' -delete && \
    $CONDA_ROOT/bin/conda clean -y --packages && \
    $CONDA_ROOT/bin/conda clean -y -a -f  && \
    $CONDA_ROOT/bin/conda build purge-all && \
    # Fix permissions
    fix-permissions.sh $CONDA_ROOT && \
    clean-layer.sh

ENV PATH=$CONDA_ROOT/bin:$PATH


# Install Jupyter Notebook
RUN conda install -y --update-all \
                'python='$PYTHON_VERSION \
                'notebook=6.1.6' \
                'scipy==1.4.*' \
                'numpy==1.18.*' \
                'matplotlib'

# install ttyd.
RUN apt update && DEBIAN_FRONTEND="noninteractive" apt -y install tzdata

RUN apt install -y \
        yarn \
        make \
        g++ \
        cmake \ 
        pkg-config \
        git \
        vim-common \
        libwebsockets-dev \
        libjson-c-dev \
        libssl-dev \
    && git clone https://github.com/tsl0922/ttyd.git \
    && cd ttyd \
    && mkdir build \
    && cd build \ 
    && cmake .. \
    && make \
    && make install

# Make folders
RUN mkdir $WORKSPACE_HOME && chmod a+rwx $WORKSPACE_HOME

RUN jupyter notebook --generate-config

# Jupyter Branding
COPY branding/logo.png $CONDA_PYTHON_DIR"/site-packages/notebook/static/base/images/logo.png"
COPY branding/favicon.ico $CONDA_PYTHON_DIR"/site-packages/notebook/static/base/images/favicon.ico"
COPY branding/favicon.ico $CONDA_PYTHON_DIR"/site-packages/notebook/static/favicon.ico"

ENV HOME=$WORKSPACE_HOME
WORKDIR $WORKSPACE_HOME
RUN jupyter notebook --generate-config
COPY ./jupyter_notebook_config.py $HOME/.jupyter/jupyter_notebook_config.py

# Jupyter Server Port
EXPOSE 8888
# ttyd Server Port
EXPOSE 8887

ENV DEFAULT_JUPYTER_TOKEN=''
ENTRYPOINT jupyter notebook  --NotebookApp.token=$DEFAULT_JUPYTER_TOKEN --ip=0.0.0.0 --allow-root --NotebookApp.notebook_dir=$WORKSPACE_HOME & ttyd -p 8887 /bin/bash